@page "/SingleClient"
@page "/SingleClient/{VAT_ID_number:int}"
@using Blazor_Application.Shared
@using Blazor_Application.Client.Sevices.ClientService
@inject IClientService ClientService

@if (VAT_ID_number == null)
{
    <h3>There are no clients here</h3>
}
else{

    <h3>Edit @cl.Name with VAT number: @cl.VAT_ID_number </h3>
}

<EditForm Model="cl" OnSubmit="handleEdit">
    <div>
        <label for="name">Change the Name</label>
        <InputText id="name" @bind-Value='cl.Name' class="form-control"></InputText>
    </div><br />
    <div>
        <label for="name">Change the Surname</label>
        <InputText id="name" @bind-Value='cl.Surname' class="form-control"></InputText>
    </div><br />
    <div >
        <label for="name">Change the Address</label>
        <InputText id="name" @bind-Value='cl.Address' class="form-control"></InputText>
    </div><br />

    <button type="submit" class="btn btn-primary" @onclick="DeleteClient">Delete client</button>
    <button type="button" class="btn btn-primary" @onclick="handleEdit">  Submit edits</button>
</EditForm>



@code {
    [Parameter]
    public int? VAT_ID_number { get; set; }

    client cl = new client { };

    protected override async Task OnParametersSetAsync()
    {
        if (VAT_ID_number != null)
        {
            cl = await ClientService.GetSingleClient((int)VAT_ID_number);
        }
        else
        {
        //
        }
    }

    async Task handleEdit()
    {
        if (VAT_ID_number ==null)
        {
            await ClientService.CreateClient(cl);
        }
        else
        {
            await ClientService.UpdateClient(cl);
        }
    }

    async Task DeleteClient()
    {
        await ClientService.DeleteClient(cl.VAT_ID_number);
    }


}
